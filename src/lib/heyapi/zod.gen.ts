// This file is auto-generated by @hey-api/openapi-ts

import { z } from "zod";

export const zUser = z.object({
  id: z.string().uuid(),
  name: z.string(),
  email: z.string().email(),
  picture: z.string(),
  createdAt: z.string().datetime(),
  updatedAt: z.string().datetime(),
});

export const zProduct: z.AnyZodObject = z.object({
  id: z.string().uuid(),
  name: z.string(),
  description: z.string().optional(),
  price: z.number(),
  stockQuantity: z.number().int(),
  category: z
    .lazy(() => {
      return zCategory;
    })
    .optional(),
  categoryId: z.string().uuid(),
  createdAt: z.string().datetime(),
  updatedAt: z.string().datetime(),
});

export const zCategory: z.AnyZodObject = z.object({
  id: z.string().uuid(),
  name: z.string(),
  description: z.string().optional(),
  products: z.array(zProduct).optional(),
  createdAt: z.string().datetime(),
  updatedAt: z.string().datetime(),
});

export const zOrderStatus = z.enum([
  "PENDING",
  "PROCESSING",
  "SHIPPED",
  "DELIVERED",
  "CANCELLED",
]);

export const zOrderItem = z.object({
  id: z.string().uuid(),
  orderId: z.string().uuid(),
  product: zProduct.optional(),
  productId: z.string().uuid(),
  quantity: z.number().int(),
  priceAtTime: z.number(),
  createdAt: z.string().datetime(),
  updatedAt: z.string().datetime(),
});

export const zOrder = z.object({
  id: z.string().uuid(),
  user: zUser.optional(),
  userId: z.string().uuid(),
  status: zOrderStatus,
  totalAmount: z.number(),
  orderItems: z.array(zOrderItem).optional(),
  createdAt: z.string().datetime(),
  updatedAt: z.string().datetime(),
});

export const zError = z.object({
  error: z.string(),
});

export const zGetApiProductsData = z.object({
  body: z.never().optional(),
  path: z.never().optional(),
  query: z
    .object({
      page: z.number().int().gte(1).optional().default(1),
      pageSize: z.number().int().gte(1).lte(100).optional().default(10),
    })
    .optional(),
});

/**
 * Successful response
 */
export const zGetApiProductsResponse = z.object({
  data: z.array(zProduct).optional(),
  page: z.number().int().optional(),
  pageSize: z.number().int().optional(),
  total: z.number().int().optional(),
  totalPages: z.number().int().optional(),
});

export const zPostApiProductsData = z.object({
  body: z.object({
    name: z.string().min(1).max(255),
    description: z.string().max(1000).optional(),
    price: z.number().gte(0),
    stockQuantity: z.number().int().gte(0),
    categoryId: z.string().uuid(),
  }),
  path: z.never().optional(),
  query: z.never().optional(),
});

/**
 * Product created successfully
 */
export const zPostApiProductsResponse = zProduct;

export const zGetApiProductsByIdData = z.object({
  body: z.never().optional(),
  path: z.object({
    id: z.string().uuid(),
  }),
  query: z.never().optional(),
});

/**
 * Product found
 */
export const zGetApiProductsByIdResponse = zProduct;

export const zPutApiProductsByIdData = z.object({
  body: z.object({
    name: z.string().min(1).max(255).optional(),
    description: z.string().max(1000).optional(),
    price: z.number().gte(0).optional(),
    stockQuantity: z.number().int().gte(0).optional(),
    categoryId: z.string().uuid().optional(),
  }),
  path: z.object({
    id: z.string().uuid(),
  }),
  query: z.never().optional(),
});

/**
 * Product updated successfully
 */
export const zPutApiProductsByIdResponse = zProduct;

export const zGetApiCategoriesData = z.object({
  body: z.never().optional(),
  path: z.never().optional(),
  query: z.never().optional(),
});

/**
 * Successful response
 */
export const zGetApiCategoriesResponse = z.array(zCategory);

export const zPostApiCategoriesData = z.object({
  body: z.object({
    name: z.string().min(1).max(255),
    description: z.string().max(1000).optional(),
  }),
  path: z.never().optional(),
  query: z.never().optional(),
});

/**
 * Category created successfully
 */
export const zPostApiCategoriesResponse = zCategory;

export const zGetApiCategoriesByIdData = z.object({
  body: z.never().optional(),
  path: z.object({
    id: z.string().uuid(),
  }),
  query: z.never().optional(),
});

/**
 * Category found with products
 */
export const zGetApiCategoriesByIdResponse = zCategory;

export const zGetApiOrdersData = z.object({
  body: z.never().optional(),
  path: z.never().optional(),
  query: z
    .object({
      userId: z.string().uuid().optional(),
    })
    .optional(),
});

/**
 * Successful response
 */
export const zGetApiOrdersResponse = z.array(zOrder);

export const zPostApiOrdersData = z.object({
  body: z.object({
    userId: z.string().uuid(),
    orderItems: z
      .array(
        z.object({
          productId: z.string().uuid(),
          quantity: z.number().int().gte(1),
        })
      )
      .min(1),
  }),
  path: z.never().optional(),
  query: z.never().optional(),
});

/**
 * Order created successfully
 */
export const zPostApiOrdersResponse = zOrder;

export const zGetApiOrdersByIdData = z.object({
  body: z.never().optional(),
  path: z.object({
    id: z.string().uuid(),
  }),
  query: z.never().optional(),
});

/**
 * Order found with items
 */
export const zGetApiOrdersByIdResponse = zOrder;

export const zPutApiOrdersByIdStatusData = z.object({
  body: z.object({
    status: zOrderStatus,
  }),
  path: z.object({
    id: z.string().uuid(),
  }),
  query: z.never().optional(),
});

/**
 * Order status updated successfully
 */
export const zPutApiOrdersByIdStatusResponse = zOrder;

export const zPostApiUsersData = z.object({
  body: z.object({
    name: z.string().min(1).max(255),
    email: z.string().email(),
    password: z.string().min(6).optional(),
    picture: z.string().url().optional(),
  }),
  path: z.never().optional(),
  query: z.never().optional(),
});

/**
 * User created successfully
 */
export const zPostApiUsersResponse = zUser;

export const zGetApiUsersByIdData = z.object({
  body: z.never().optional(),
  path: z.object({
    id: z.string().uuid(),
  }),
  query: z.never().optional(),
});

/**
 * User profile found
 */
export const zGetApiUsersByIdResponse = zUser;
