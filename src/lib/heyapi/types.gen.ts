// This file is auto-generated by @hey-api/openapi-ts

export type User = {
  id: string;
  email: string;
  name: string;
  createdAt: string;
  updatedAt: string;
};

export type CreateUserRequest = {
  email: string;
  name: string;
  password?: string;
};

export type UpdateUserRequest = {
  name?: string;
  email?: string;
};

export type UserListResponse = {
  data?: Array<User>;
  page?: number;
  pageSize?: number;
  total?: number;
  totalPages?: number;
};

export type Category = {
  id: string;
  name: string;
  description?: string;
  createdAt: string;
  updatedAt: string;
};

export type CreateCategoryRequest = {
  name: string;
  description?: string;
};

export type CategoryListResponse = {
  data?: Array<Category>;
};

export type Product = {
  id: string;
  name: string;
  description?: string;
  price: number;
  stockQuantity: number;
  categoryId: string;
  category?: Category;
  createdAt: string;
  updatedAt: string;
};

export type CreateProductRequest = {
  name: string;
  description?: string;
  price: number;
  stockQuantity: number;
  categoryId: string;
};

export type UpdateProductRequest = {
  name?: string;
  description?: string;
  price?: number;
  stockQuantity?: number;
  categoryId?: string;
};

export type ProductListResponse = {
  data?: Array<Product>;
  page?: number;
  pageSize?: number;
  total?: number;
  totalPages?: number;
};

export type OrderStatus =
  | "PENDING"
  | "PROCESSING"
  | "SHIPPED"
  | "DELIVERED"
  | "CANCELLED";

export type OrderItem = {
  id: string;
  orderId: string;
  productId: string;
  quantity: number;
  price: number;
  product?: Product;
};

export type Order = {
  id: string;
  userId: string;
  status: OrderStatus;
  total: number;
  user?: User;
  items?: Array<OrderItem>;
  createdAt: string;
  updatedAt: string;
};

export type CreateOrderRequest = {
  userId: string;
  items: Array<CreateOrderItemRequest>;
};

export type CreateOrderItemRequest = {
  productId: string;
  quantity: number;
};

export type UpdateOrderRequest = {
  status: OrderStatus;
};

export type OrderListResponse = {
  data?: Array<Order>;
  page?: number;
  pageSize?: number;
  total?: number;
  totalPages?: number;
};

export type _Error = {
  message: string;
  code?: string;
  details?: {
    [key: string]: unknown;
  };
};

export type GetApiProductsData = {
  body?: never;
  path?: never;
  query?: {
    /**
     * Page number (default 1)
     */
    page?: number;
    /**
     * Number of items per page (default 10)
     */
    pageSize?: number;
  };
  url: "/api/products";
};

export type GetApiProductsErrors = {
  /**
   * Internal server error
   */
  500: _Error;
};

export type GetApiProductsError = GetApiProductsErrors[keyof GetApiProductsErrors];

export type GetApiProductsResponses = {
  /**
   * Successful response
   */
  200: ProductListResponse;
};

export type GetApiProductsResponse =
  GetApiProductsResponses[keyof GetApiProductsResponses];

export type PostApiProductsData = {
  body: CreateProductRequest;
  path?: never;
  query?: never;
  url: "/api/products";
};

export type PostApiProductsErrors = {
  /**
   * Bad request - validation error
   */
  400: _Error;
  /**
   * Internal server error
   */
  500: _Error;
};

export type PostApiProductsError = PostApiProductsErrors[keyof PostApiProductsErrors];

export type PostApiProductsResponses = {
  /**
   * Product created successfully
   */
  201: Product;
};

export type PostApiProductsResponse =
  PostApiProductsResponses[keyof PostApiProductsResponses];

export type DeleteApiProductsByIdData = {
  body?: never;
  path: {
    /**
     * Product ID
     */
    id: string;
  };
  query?: never;
  url: "/api/products/{id}";
};

export type DeleteApiProductsByIdErrors = {
  /**
   * Product not found
   */
  404: _Error;
  /**
   * Internal server error
   */
  500: _Error;
};

export type DeleteApiProductsByIdError =
  DeleteApiProductsByIdErrors[keyof DeleteApiProductsByIdErrors];

export type DeleteApiProductsByIdResponses = {
  /**
   * Product deleted successfully
   */
  204: void;
};

export type DeleteApiProductsByIdResponse =
  DeleteApiProductsByIdResponses[keyof DeleteApiProductsByIdResponses];

export type GetApiProductsByIdData = {
  body?: never;
  path: {
    /**
     * Product ID
     */
    id: string;
  };
  query?: never;
  url: "/api/products/{id}";
};

export type GetApiProductsByIdErrors = {
  /**
   * Product not found
   */
  404: _Error;
  /**
   * Internal server error
   */
  500: _Error;
};

export type GetApiProductsByIdError =
  GetApiProductsByIdErrors[keyof GetApiProductsByIdErrors];

export type GetApiProductsByIdResponses = {
  /**
   * Product found
   */
  200: Product;
};

export type GetApiProductsByIdResponse =
  GetApiProductsByIdResponses[keyof GetApiProductsByIdResponses];

export type PutApiProductsByIdData = {
  body: UpdateProductRequest;
  path: {
    /**
     * Product ID
     */
    id: string;
  };
  query?: never;
  url: "/api/products/{id}";
};

export type PutApiProductsByIdErrors = {
  /**
   * Product not found
   */
  404: _Error;
  /**
   * Internal server error
   */
  500: _Error;
};

export type PutApiProductsByIdError =
  PutApiProductsByIdErrors[keyof PutApiProductsByIdErrors];

export type PutApiProductsByIdResponses = {
  /**
   * Product updated successfully
   */
  200: Product;
};

export type PutApiProductsByIdResponse =
  PutApiProductsByIdResponses[keyof PutApiProductsByIdResponses];

export type GetApiCategoriesData = {
  body?: never;
  path?: never;
  query?: never;
  url: "/api/categories";
};

export type GetApiCategoriesErrors = {
  /**
   * Internal server error
   */
  500: _Error;
};

export type GetApiCategoriesError = GetApiCategoriesErrors[keyof GetApiCategoriesErrors];

export type GetApiCategoriesResponses = {
  /**
   * Successful response
   */
  200: CategoryListResponse;
};

export type GetApiCategoriesResponse =
  GetApiCategoriesResponses[keyof GetApiCategoriesResponses];

export type PostApiCategoriesData = {
  body: CreateCategoryRequest;
  path?: never;
  query?: never;
  url: "/api/categories";
};

export type PostApiCategoriesErrors = {
  /**
   * Bad request - validation error
   */
  400: _Error;
  /**
   * Internal server error
   */
  500: _Error;
};

export type PostApiCategoriesError =
  PostApiCategoriesErrors[keyof PostApiCategoriesErrors];

export type PostApiCategoriesResponses = {
  /**
   * Category created successfully
   */
  201: Category;
};

export type PostApiCategoriesResponse =
  PostApiCategoriesResponses[keyof PostApiCategoriesResponses];

export type GetApiCategoriesByIdData = {
  body?: never;
  path: {
    /**
     * Category ID
     */
    id: string;
  };
  query?: never;
  url: "/api/categories/{id}";
};

export type GetApiCategoriesByIdErrors = {
  /**
   * Category not found
   */
  404: _Error;
  /**
   * Internal server error
   */
  500: _Error;
};

export type GetApiCategoriesByIdError =
  GetApiCategoriesByIdErrors[keyof GetApiCategoriesByIdErrors];

export type GetApiCategoriesByIdResponses = {
  /**
   * Category found
   */
  200: Category;
};

export type GetApiCategoriesByIdResponse =
  GetApiCategoriesByIdResponses[keyof GetApiCategoriesByIdResponses];

export type GetApiOrdersData = {
  body?: never;
  path?: never;
  query?: {
    /**
     * Page number (default 1)
     */
    page?: number;
    /**
     * Number of items per page (default 10)
     */
    pageSize?: number;
  };
  url: "/api/orders";
};

export type GetApiOrdersErrors = {
  /**
   * Internal server error
   */
  500: _Error;
};

export type GetApiOrdersError = GetApiOrdersErrors[keyof GetApiOrdersErrors];

export type GetApiOrdersResponses = {
  /**
   * Successful response
   */
  200: OrderListResponse;
};

export type GetApiOrdersResponse = GetApiOrdersResponses[keyof GetApiOrdersResponses];

export type PostApiOrdersData = {
  body: CreateOrderRequest;
  path?: never;
  query?: never;
  url: "/api/orders";
};

export type PostApiOrdersErrors = {
  /**
   * Bad request - validation error
   */
  400: _Error;
  /**
   * Internal server error
   */
  500: _Error;
};

export type PostApiOrdersError = PostApiOrdersErrors[keyof PostApiOrdersErrors];

export type PostApiOrdersResponses = {
  /**
   * Order created successfully
   */
  201: Order;
};

export type PostApiOrdersResponse = PostApiOrdersResponses[keyof PostApiOrdersResponses];

export type GetApiOrdersByIdData = {
  body?: never;
  path: {
    /**
     * Order ID
     */
    id: string;
  };
  query?: never;
  url: "/api/orders/{id}";
};

export type GetApiOrdersByIdErrors = {
  /**
   * Order not found
   */
  404: _Error;
  /**
   * Internal server error
   */
  500: _Error;
};

export type GetApiOrdersByIdError = GetApiOrdersByIdErrors[keyof GetApiOrdersByIdErrors];

export type GetApiOrdersByIdResponses = {
  /**
   * Order found
   */
  200: Order;
};

export type GetApiOrdersByIdResponse =
  GetApiOrdersByIdResponses[keyof GetApiOrdersByIdResponses];

export type PutApiOrdersByIdData = {
  body: UpdateOrderRequest;
  path: {
    /**
     * Order ID
     */
    id: string;
  };
  query?: never;
  url: "/api/orders/{id}";
};

export type PutApiOrdersByIdErrors = {
  /**
   * Order not found
   */
  404: _Error;
  /**
   * Internal server error
   */
  500: _Error;
};

export type PutApiOrdersByIdError = PutApiOrdersByIdErrors[keyof PutApiOrdersByIdErrors];

export type PutApiOrdersByIdResponses = {
  /**
   * Order updated successfully
   */
  200: Order;
};

export type PutApiOrdersByIdResponse =
  PutApiOrdersByIdResponses[keyof PutApiOrdersByIdResponses];

export type GetApiUsersData = {
  body?: never;
  path?: never;
  query?: {
    /**
     * Page number (default 1)
     */
    page?: number;
    /**
     * Number of items per page (default 10)
     */
    pageSize?: number;
  };
  url: "/api/users";
};

export type GetApiUsersErrors = {
  /**
   * Internal server error
   */
  500: _Error;
};

export type GetApiUsersError = GetApiUsersErrors[keyof GetApiUsersErrors];

export type GetApiUsersResponses = {
  /**
   * Successful response
   */
  200: UserListResponse;
};

export type GetApiUsersResponse = GetApiUsersResponses[keyof GetApiUsersResponses];

export type PostApiUsersData = {
  body: CreateUserRequest;
  path?: never;
  query?: never;
  url: "/api/users";
};

export type PostApiUsersErrors = {
  /**
   * Bad request - validation error
   */
  400: _Error;
  /**
   * Internal server error
   */
  500: _Error;
};

export type PostApiUsersError = PostApiUsersErrors[keyof PostApiUsersErrors];

export type PostApiUsersResponses = {
  /**
   * User created successfully
   */
  201: User;
};

export type PostApiUsersResponse = PostApiUsersResponses[keyof PostApiUsersResponses];

export type DeleteApiUsersByIdData = {
  body?: never;
  path: {
    /**
     * User ID
     */
    id: string;
  };
  query?: never;
  url: "/api/users/{id}";
};

export type DeleteApiUsersByIdErrors = {
  /**
   * User not found
   */
  404: _Error;
  /**
   * Internal server error
   */
  500: _Error;
};

export type DeleteApiUsersByIdError =
  DeleteApiUsersByIdErrors[keyof DeleteApiUsersByIdErrors];

export type DeleteApiUsersByIdResponses = {
  /**
   * User deleted successfully
   */
  204: void;
};

export type DeleteApiUsersByIdResponse =
  DeleteApiUsersByIdResponses[keyof DeleteApiUsersByIdResponses];

export type GetApiUsersByIdData = {
  body?: never;
  path: {
    /**
     * User ID
     */
    id: string;
  };
  query?: never;
  url: "/api/users/{id}";
};

export type GetApiUsersByIdErrors = {
  /**
   * User not found
   */
  404: _Error;
  /**
   * Internal server error
   */
  500: _Error;
};

export type GetApiUsersByIdError = GetApiUsersByIdErrors[keyof GetApiUsersByIdErrors];

export type GetApiUsersByIdResponses = {
  /**
   * User found
   */
  200: User;
};

export type GetApiUsersByIdResponse =
  GetApiUsersByIdResponses[keyof GetApiUsersByIdResponses];

export type PutApiUsersByIdData = {
  body: UpdateUserRequest;
  path: {
    /**
     * User ID
     */
    id: string;
  };
  query?: never;
  url: "/api/users/{id}";
};

export type PutApiUsersByIdErrors = {
  /**
   * User not found
   */
  404: _Error;
  /**
   * Internal server error
   */
  500: _Error;
};

export type PutApiUsersByIdError = PutApiUsersByIdErrors[keyof PutApiUsersByIdErrors];

export type PutApiUsersByIdResponses = {
  /**
   * User updated successfully
   */
  200: User;
};

export type PutApiUsersByIdResponse =
  PutApiUsersByIdResponses[keyof PutApiUsersByIdResponses];

export type ClientOptions = {
  baseUrl: "http://localhost:3000" | "https://api.catalyst.com" | (string & {});
};
